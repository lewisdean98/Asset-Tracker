{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MainPage = function MainPage() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"  \"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      responseText = _React$useState4[0],\n      setResponseText = _React$useState4[1];\n\n  var scanAssetTag = function scanAssetTag() {\n    try {\n      var uri = \"http://localhost:8000/assets/scan/\" + text;\n      var response = fetch(uri).then(function (response) {\n        return response.text();\n      }).then(function (data) {\n        setResponseText(data);\n      });\n    } catch (error) {\n      alert(error);\n    }\n\n    setText(\"\");\n  };\n\n  return _jsxs(View, {\n    style: styles.mainPage,\n    children: [_jsx(Text, {\n      style: styles.textbox,\n      children: \"Please scan the asset tag of the device\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setText,\n      value: text,\n      autoFocus: true,\n      onSubmitEditing: scanAssetTag\n    }), _jsx(Text, {\n      style: styles.textbox,\n      children: responseText\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  mainPage: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textbox: {\n    color: 'coral',\n    font: 'sans-serif'\n  },\n  input: {\n    color: 'coral',\n    borderRadius: 5,\n    height: 100,\n    width: 700,\n    fontSize: 70,\n    textAlign: 'center'\n  }\n});\nexport default MainPage;","map":{"version":3,"sources":["/Users/lewisdean/Documents/CFC6 Asset Tracker/oss-asset-tracker/components/main-page.js"],"names":["React","useState","MainPage","text","setText","responseText","setResponseText","scanAssetTag","uri","response","fetch","then","data","error","alert","styles","mainPage","textbox","input","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","font","borderRadius","height","width","fontSize","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;AAGA,IAAMC,QAAQ,GAAI,SAAZA,QAAY,GAAM;AACpB,wBAAwBF,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAaC,OAAb;;AACA,yBAAwCJ,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxC;AAAA;AAAA,MAAOI,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,QAAI;AACA,UAAMC,GAAG,GAAG,uCAAuCL,IAAnD;AAGA,UAAIM,QAAQ,GAAGC,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAgB,UAAAF,QAAQ;AAAA,eAAEA,QAAQ,CAACN,IAAT,EAAF;AAAA,OAAxB,EAA2CQ,IAA3C,CAAgD,UAAAC,IAAI,EAAI;AAACN,QAAAA,eAAe,CAACM,IAAD,CAAf;AAAwB,OAAjF,CAAf;AACH,KALD,CAKE,OAAOC,KAAP,EAAc;AACZC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH;;AAGDT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAbD;;AAeA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,QAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA,MADF,EAGE,KAAC,SAAD;AACI,MAAA,KAAK,EAAEF,MAAM,CAACG,KADlB;AAEI,MAAA,YAAY,EAAId,OAFpB;AAGI,MAAA,KAAK,EAAID,IAHb;AAII,MAAA,SAAS,EAAK,IAJlB;AAKI,MAAA,eAAe,EAAII;AALvB,MAHF,EAWI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEQ,MAAM,CAACE,OAApB;AAAA,gBAA8BZ;AAA9B,MAXJ;AAAA,IADJ;AAeH,CAlCD;;AAoCA,IAAMU,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,QAAQ,EAAG;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAQ7BP,EAAAA,OAAO,EAAG;AACNQ,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,IAAI,EAAG;AAFD,GARmB;AAa7BR,EAAAA,KAAK,EAAG;AACJO,IAAAA,KAAK,EAAG,OADJ;AAEJE,IAAAA,YAAY,EAAG,CAFX;AAGJC,IAAAA,MAAM,EAAE,GAHJ;AAIJC,IAAAA,KAAK,EAAE,GAJH;AAKJC,IAAAA,QAAQ,EAAC,EALL;AAMJC,IAAAA,SAAS,EAAG;AANR;AAbqB,CAAlB,CAAf;AAuBA,eAAe7B,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\n\nconst MainPage  = () => {\n    const [text, setText] = React.useState(\"\");\n    const [responseText, setResponseText] = React.useState(\"  \");\n    \n    const scanAssetTag = () => {\n        //Call API\n        try {\n            const uri = \"http://localhost:8000/assets/scan/\" + text;\n            \n            //Call API and set bottom text to HTTP response\n            var response = fetch(uri).then(response=>response.text()).then(data => {setResponseText(data); });\n        } catch (error) {\n            alert(error)\n        }\n        \n        //Clear textbox\n        setText(\"\");\n    };\n    \n    return (\n        <View style={styles.mainPage}>\n          <Text style={styles.textbox}>Please scan the asset tag of the device</Text>\n          \n          <TextInput \n              style={styles.input}\n              onChangeText = {setText}\n              value = {text}\n              autoFocus  = {true}\n              onSubmitEditing = {scanAssetTag} \n          />\n\n            <Text style={styles.textbox}>{responseText}</Text>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    mainPage : {\n        flex: 1,\n        backgroundColor: '#121212',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    textbox : {\n        color: 'coral',\n        font : 'sans-serif'\n    },\n\n    input : {\n        color : 'coral',\n        borderRadius : 5,\n        height: 100,\n        width: 700,\n        fontSize:70,\n        textAlign : 'center',\n    },\n});\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}