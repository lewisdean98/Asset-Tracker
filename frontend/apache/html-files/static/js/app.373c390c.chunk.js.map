{"version":3,"sources":["src/style/colours.js","src/style/styles.js","src/utils/get-asset-history.js","src/components/asset-history.js","src/views/asset-tag-scanning.js","App.js"],"names":["colours","background","text_primary","text_secondary","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","mainPage","textbox","color","font","fontSize","input","borderRadius","height","width","textAlign","outlineStyle","getAssetHistory","asset_tag","uri","fetch","then","response","text","data","error","AssetHistory","props","history","View","Text","AssetTagScanning","React","useState","setText","responseText","setResponseText","setHistory","inputRef","useRef","style","TextInput","onChangeText","value","autoFocus","onSubmitEditing","toUpperCase","test","alert","focus","ref","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","name","component"],"mappings":"6MAOeA,EAPC,CACZC,WAAa,UACbC,aAAe,UACfC,eAAiB,WC+BNC,E,KA/BAC,EAAWC,OAAO,CAC7BC,UAAW,CACTC,KAAM,EACNC,gBAAiBT,EAAQC,WACzBS,WAAY,SACZC,eAAgB,UAGlBC,SAAW,CACPJ,KAAM,EACNE,WAAY,SACZC,eAAgB,UAGpBE,QAAU,CACNC,MAAOd,EAAQG,eACfY,KAAO,aACPC,SAAU,IAGdC,MAAQ,CACJH,MAAQd,EAAQE,aAChBgB,aAAe,EACfC,OAAQ,IACRC,MAAO,IACPJ,SAAS,GACTK,UAAY,SACZC,aAAc,UCpBPC,EAVS,SAACC,GACrB,IAAMC,EAAM,2CAA6CD,EAEzD,IACIE,MAAMD,GAAKE,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAS,OAAOA,KAClE,MAAOC,GACL,OAAOA,I,QCiCAC,EA3BM,SAACC,GAELA,EAAMC,QAOnB,OACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAAOH,EAAMC,aC0CVG,EAzDW,WACtB,MAAwBC,IAAMC,SAAS,IAAvC,WAAOV,EAAP,KAAaW,EAAb,KACA,EAAwCF,IAAMC,SAAS,MAAvD,WAAOE,EAAP,KAAqBC,EAArB,KACA,EAA8BJ,IAAMC,SAAS,IAA7C,WAAOL,EAAP,KAAgBS,EAAhB,KAgCMC,EAAWC,mBAEjB,OACI,eAACV,EAAA,EAAD,CAAMW,MAAO1C,EAAOQ,SAApB,UACE,cAACwB,EAAA,EAAD,CAAMU,MAAO1C,EAAOS,QAApB,qDAEA,cAACkC,EAAA,EAAD,CACID,MAAO1C,EAAOa,MACd+B,aAAgBR,EAChBS,MAASpB,EACTqB,WAAc,EACdC,gBAzCW,WACjB,IAAM3B,EAAYK,EAAKuB,cAKvB,GAFW,uCAEJC,KAAK7B,GACR,IAKIE,MAHY,qCAAuCF,GAGxCG,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAASY,EAAgBZ,MAGzEa,EAAWpB,EAAgBC,IAE7B,MAAOO,GACLuB,MAAMvB,QAIVW,EAAgB,uCAIpBF,EAAQ,IACRI,EAASW,SAeHC,IAAOZ,IAGT,cAACR,EAAA,EAAD,CAAMU,MAAO1C,EAAOS,QAApB,SAA8B4B,IAE9B,cAAC,EAAD,CAAcP,QAAWA,QCnD/BuB,EAAQC,cAEC,SAASC,IACtB,OACE,cAACC,EAAA,EAAD,UACE,cAACH,EAAMI,UAAP,UACE,cAACJ,EAAMK,OAAP,CAAcC,KAAK,OAAOC,UAAW3B,U","file":"static/js/app.373c390c.chunk.js","sourcesContent":["const colours = {\n    background : \"#d69f7e\",\n    text_primary : \"#050609\",\n    text_secondary : \"#774936\"\n    //#050609, #f5d0c5, #d69f7e, #774936, #3c0000\n}\n\nexport default colours","import { StyleSheet } from \"react-native\";\nimport colours from \"./colours\";\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: colours.background,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    mainPage : {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    textbox : {\n        color: colours.text_secondary,\n        font : 'sans-serif',\n        fontSize: 30\n    },\n\n    input : {\n        color : colours.text_primary,\n        borderRadius : 5,\n        height: 100,\n        width: 700,\n        fontSize:70,\n        textAlign : 'center',\n        outlineStyle: 'none'\n    },\n});\n\nexport default styles;","const getAssetHistory = (asset_tag) => {\n    const uri = \"http://localhost:8000/assets/gethistory/\" + asset_tag;\n\n    try {\n        fetch(uri).then(response=>response.text()).then(data => {return(data);});\n    } catch (error) {\n        return(error)\n    }\n};\n\nexport default getAssetHistory;","import { FlatList, View, Text } from \"react-native\";\nimport React from \"react\";\n\nimport styles from \"../style/styles\";\nimport getAssetHistory from \"../utils/get-asset-history\";\n\nconst ListItem = ({ checked_in }) => (\n    <View>\n        <Text style={styles.textbox}>{checked_in}</Text>\n    </View>\n);\n\nconst AssetHistory = (props) => {  \n\n    const data = props.history;\n\n    const renderItem = ({item}) => (\n        <ListItem checked_in={item.checked_in}/>\n    );\n\n        \n    return (\n        <View>\n            <Text>{props.history}</Text>\n        </View>\n    )\n    \n\n    /*return (\n        <View>\n           < <FlatList \n                data = {data}\n                renderItem = {renderItem}\n                keyExtractor={item => item.id}\n            />>\n        </View>\n    );*/\n};\n\nexport default AssetHistory;","import React, {useState} from 'react';\nimport { Text, View, TextInput } from 'react-native';\nimport styles from '../style/styles';\nimport { useRef } from 'react';\n\nimport AssetHistory from '../components/asset-history';\nimport getAssetHistory from '../utils/get-asset-history';\n\nconst AssetTagScanning  = () => {\n    const [text, setText] = React.useState(\"\");\n    const [responseText, setResponseText] = React.useState(\"  \");\n    const [history, setHistory] = React.useState(\"\")\n\n    const scanAssetTag = () => {\n        const asset_tag = text.toUpperCase();\n        \n        //Check that asset tag is valid\n        const re = /^((((B)\\d{5}){1})|(((BK)\\d{6}){1}))$/;\n        \n        if (re.test(asset_tag)) \n            try {\n                //Call API\n                const uri = \"http://localhost:8000/assets/scan/\" + asset_tag;\n                \n                //Call API and set bottom text to HTTP response\n                fetch(uri).then(response=>response.text()).then(data => {setResponseText(data);});\n\n                //Get asset history\n                setHistory(getAssetHistory(asset_tag));\n\n            } catch (error) {\n                alert(error)\n            }\n        \n        else {\n            setResponseText(\"Asset tag invalid, please try again\")\n        }\n        //Clear textbox\n        \n        setText(\"\");\n        inputRef.focus();\n    };\n\n    const inputRef = useRef();\n\n    return (\n        <View style={styles.mainPage}>\n          <Text style={styles.textbox}>Please scan the asset tag of the device</Text>\n         \n          <TextInput \n              style={styles.input}\n              onChangeText = {setText}\n              value = {text}\n              autoFocus  = {true}\n              onSubmitEditing = {scanAssetTag} \n              ref = {inputRef}\n          />\n\n            <Text style={styles.textbox}>{responseText}</Text>\n\n            <AssetHistory history = {history}/>\n        </View>\n    );\n}\n\nexport default AssetTagScanning;","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport AssetTagScanning from './src/views/asset-tag-scanning';\nimport styles from './src/style/styles';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={AssetTagScanning} />\n      </Stack.Navigator>\n    </ NavigationContainer>\n  );\n}"],"sourceRoot":""}